# Configuração do Nginx para produção

# Define o usuário que irá rodar os processos do Nginx.
user www-data;
# Define o número de processos worker. 'auto' é uma boa escolha para a maioria dos casos.
worker_processes auto;
# Arquivo para armazenar o ID do processo principal do Nginx.
pid /run/nginx.pid;

# Inclui arquivos de configuração de módulos dinâmicos.
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    # Tipos de arquivos e suas respectivas extensões (MIME types).
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Otimizações de performance.
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    client_max_body_size 50M;

    # Configurações de compressão Gzip para reduzir o tamanho dos assets.
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        # O Nginx escutará na porta 80 dentro do container.
        listen 80;
        server_name _; # Aceita qualquer hostname.

        # Define a pasta raiz da aplicação.
        root /var/www/html/public;
        # Define o arquivo de índice principal.
        index index.php;

        # Configura o log de acesso e de erros.
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Regra principal para lidar com as requisições do Laravel.
        location / {
            # Tenta servir o arquivo diretamente, depois como um diretório,
            # e se não encontrar, passa a requisição para o index.php (Front Controller).
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Passa os scripts PHP para o PHP-FPM escutando na porta 9000.
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            # O nome 'php' corresponde ao nome do serviço no supervisord.conf
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        # Nega o acesso a arquivos .htaccess, pois o Nginx não os utiliza.
        location ~ /\.ht {
            deny all;
        }
    }
}
